SET 'auto.offset.reset'='earliest';

CREATE STREAM STOCK_PRICES
(
    price DOUBLE,
    symbol VARCHAR,
    timestamp BIGINT
)
WITH
(
    KAFKA_TOPIC='finnhub_trades',
    VALUE_FORMAT='AVRO',  -- Or AVRO, depending on your data
    TIMESTAMP='timestamp'
);

-- GET LATEST PRICES FOR ALL SYMBOLS --
CREATE STREAM SYMBOLS
(
    SYMBOL VARCHAR,
    TIMESTAMP BIGINT
)
WITH
(
    KAFKA_TOPIC = 'finnhub_company_symbols',
    VALUE_FORMAT = 'AVRO',
    TIMESTAMP = 'timestamp'
);

CREATE TABLE COMPANY_SYMBOLS (
    KAFKA_TOPIC = 'COMPANY_SYMBOLS',
    VALUE_FORMAT = 'AVRO',
    KEY_FORMAT = 'AVRO'  -- Or 'KAFKA' if your keys are not JSON
) AS
SELECT
  SYMBOL,
  LATEST_BY_OFFSET(TIMESTAMP) AS MX
FROM SYMBOLS
GROUP BY SYMBOL
EMIT CHANGES;


CREATE TABLE LATEST_PRICES (
    KAFKA_TOPIC = 'LATEST_PRICES',
    VALUE_FORMAT = 'AVRO',
    KEY_FORMAT = 'AVRO'  -- Or 'KAFKA' if your keys are not JSON
) AS
SELECT
  sp.SYMBOL as SYMBOL,
  COALESCE(LATEST_BY_OFFSET(sp.price), CAST(0 AS DOUBLE)) AS LAST_PRICE,
  LATEST_BY_OFFSET(sp.TIMESTAMP) AS TIMESTAMP
FROM STOCK_PRICES sp
  LEFT JOIN COMPANY_SYMBOLS cs
  ON sp.SYMBOL = cs.SYMBOL
GROUP BY sp.SYMBOL
EMIT CHANGES;


----------------------------------------------

CREATE TABLE STOCK_PRICES_1S (
    KAFKA_TOPIC = 'STOCK_PRICES_1S',
    VALUE_FORMAT = 'AVRO',
    KEY_FORMAT = 'AVRO'  -- Or 'KAFKA' if your keys are not JSON
) AS
SELECT
  SYMBOL,
  WINDOWSTART AS TIMESTAMP,
  COUNT(*) AS COUNT,
  AVG(PRICE) AS AVG_PRICE
FROM STOCK_PRICES
WINDOW TUMBLING (SIZE 1 SECONDS)
GROUP BY SYMBOL
EMIT FINAL;

-- SELECT * FROM STOCK_PRICES_1S EMIT CHANGES;

-- DROP TABLE STOCK_PRICES_1S;

CREATE STREAM STOCK_PRICES_1S_STREAM
(
    SYMBOL VARCHAR KEY,  -- Explicitly declare SYMBOL as the key
    PRICE DOUBLE,
    TIMESTAMP BIGINT
)
WITH
(
    KAFKA_TOPIC = 'STOCK_PRICES_1S',
    VALUE_FORMAT = 'AVRO',
    WINDOW_TYPE = 'TUMBLING',
    WINDOW_SIZE = '1 SECONDS'
);

-- SELECT * FROM STOCK_PRICES_1S_STREAM EMIT CHANGES;

-- DROP STREAM STOCK_PRICES_1S_STREAM;


CREATE TABLE STOCK_SUMMARY WITH (
    KAFKA_TOPIC = 'STOCK_SUMMARY',
    VALUE_FORMAT = 'AVRO',
    KEY_FORMAT = 'AVRO'  -- Or 'KAFKA' if your keys are not JSON
) AS
SELECT
  TIMESTAMP,
  SUM(PRICE) AS TOTAL_PRICE,
  COLLECT_LIST(SYMBOL) AS symbols
FROM stock_prices_1s_stream
WINDOW TUMBLING(SIZE 1 SECONDS)
GROUP BY TIMESTAMP
EMIT CHANGES;


select * from STOCK_SUMMARY_STREAM emit changes;
